name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
    
    - name: Install dependencies
      run: |
        gem install bundler
        bundle install
    
    - name: Lint Markdown files
      run: |
        npm install -g markdownlint-cli
        markdownlint '**/*.md' --ignore node_modules --ignore vendor
    
    - name: Validate HTML
      run: |
        npm install -g html-validator-cli
        echo "HTML validation will run after build"
    
    - name: Check broken links
      run: |
        npm install -g broken-link-checker
        echo "Link checking will run after deployment"

  build:
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
    
    - name: Install dependencies
      run: |
        gem install bundler
        bundle install
    
    - name: Build Jekyll site
      run: bundle exec jekyll build
      env:
        JEKYLL_ENV: production
    
    - name: Test Jekyll build
      run: |
        bundle exec jekyll doctor
        if [ -d "_site" ]; then
          echo "Build successful!"
          ls -la _site/
        else
          echo "Build failed!"
          exit 1
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: jekyll-site
        path: _site/

  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: jekyll-site
        path: _site/
    
    - name: Validate generated HTML
      run: |
        npm install -g html-validate
        echo '{
          "extends": ["html-validate:recommended"],
          "rules": {
            "no-inline-style": "off",
            "prefer-native-element": "off"
          }
        }' > .htmlvalidate.json
        npx html-validate "_site/**/*.html" || true
    
    - name: Check file sizes
      run: |
        echo "Checking file sizes..."
        find _site -type f -size +1M -exec ls -lh {} \; | awk '{print $9 ": " $5}'
        
    - name: Performance check
      run: |
        echo "Checking for common performance issues..."
        # Check for unoptimized images
        find _site -type f \( -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" \) -size +500k -exec echo "Large image found: {}" \;

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: jekyll-site
        path: _site/
    
    - name: Setup Pages
      uses: actions/configure-pages@v3
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: _site/
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2